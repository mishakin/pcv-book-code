%% Rotation matrix from Euler angles
% R_B = R1(omega)*R2(phi)*R3(kappa)
% see PCV (8.20) [a,b,c] ->[o,p,q]
%
% Usage:
%   R = calc_R_from_opq_kraus(omega,phi,kappa)
%  
%   omega,phi,kappa - double, Euler angles, radiant
%   R - double 3x3, 3D rotation matrix
%
% Wolfgang Förstner
% wfoerstn@uni-bonn.de 
%
% See also calc_opq_from_R_Kraus, calc_r_phi_from_R, calc_Rot_ab, calc_Rot_q, 
% calc_Rot_r, calc_Rot_rod, calc_Rot_rp, calc_Mq, calc_Mq_comm

function R = calc_R_from_opq_kraus(omega,phi,kappa)

R=[...
    cos(phi)*cos(kappa), ...
    -cos(phi)*sin(kappa), ...
    sin(phi); ... 
    sin(omega)*sin(phi)*cos(kappa)+cos(omega)*sin(kappa), ...
    -sin(omega)*sin(phi)*sin(kappa)+cos(omega)*cos(kappa), ...
    -sin(omega)*cos(phi); ...
    -cos(omega)*sin(phi)*cos(kappa)+sin(omega)*sin(kappa), ...
     cos(omega)*sin(phi)*sin(kappa)+sin(omega)*cos(kappa), ...
     cos(omega)*cos(phi)];
